{
  "active": true,
  "connections": {
    "fluxo_chamado": {
      "main": [
        [
          {
            "node": "pesquisa_api_key_bot_conversa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pesquisa_api_key_bot_conversa": {
      "main": [
        [
          {
            "node": "cadastrar_contato",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cadastrar_contato": {
      "main": [
        [
          {
            "node": "checkout",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "agendamento": {
      "main": [
        [
          {
            "node": "pesquisa_json_fields_deal3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qualificacao_preenchida",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qualificacao_preenchida": {
      "main": [
        [
          {
            "node": "pesquisa_json_fields_deal",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "pesquisa_json_fields_deal2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pesquisa_json_fields_deal": {
      "main": [
        [
          {
            "node": "formata_campos_deal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pesquisa_json_fields_deal2": {
      "main": [
        [
          {
            "node": "formata_campos_deal2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pesquisa_json_fields_deal3": {
      "main": [
        [
          {
            "node": "formata_campos_deal3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "checkout": {
      "main": [
        [
          {
            "node": "pesquisa_json_fields_deal1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "agendamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pesquisa_json_fields_deal1": {
      "main": [
        [
          {
            "node": "formata_campos_deal1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formata_campos_deal3": {
      "main": [
        [
          {
            "node": "preenche_campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formata_campos_deal1": {
      "main": [
        [
          {
            "node": "preenche_campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formata_campos_deal": {
      "main": [
        [
          {
            "node": "preenche_campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formata_campos_deal2": {
      "main": [
        [
          {
            "node": "preenche_campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "preenche_campos": {
      "main": [
        []
      ]
    }
  },
  "createdAt": "2025-04-01T18:39:25.191Z",
  "id": "vB4ifZb9kHmC2yLb",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "⌚[Future Minds][Bot Conversa] - Cria ou Atualiza Contato",
  "nodes": [
    {
      "parameters": {
        "path": "facad9e8-d58f-4ca4-868a-69d8fe816cc9",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -940,
        100
      ],
      "id": "7dd02b18-1408-42dd-a555-ade794f9228e",
      "name": "fluxo_chamado",
      "webhookId": "facad9e8-d58f-4ca4-868a-69d8fe816cc9"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhook/subscriber/",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "phone",
              "value": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"telefone\"] }}"
            },
            {
              "name": "first_name",
              "value": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"nome\"] || \".\"}}"
            },
            {
              "name": "last_name",
              "value": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"sobrenome\"] || \".\"}}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "API-KEY",
              "value": "={{ $node[\"pesquisa_api_key_bot_conversa\"].json[\"valor_variavel\"] }}"
            }
          ]
        }
      },
      "name": "cadastrar_contato",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -480,
        100
      ],
      "id": "a2dbfada-d004-491a-8226-f66a164bc7f7",
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "variaveis_globais_n8n",
          "mode": "list",
          "cachedResultName": "variaveis_globais_n8n"
        },
        "where": {
          "values": [
            {
              "column": "nome_variavel",
              "value": "Chave de API Bot Conversa"
            }
          ]
        },
        "combineConditions": "OR",
        "options": {}
      },
      "id": "e64d8f59-addf-4cdc-8678-5579be7fc15e",
      "name": "pesquisa_api_key_bot_conversa",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -700,
        100
      ],
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "JtvnOichfjUUmLAo",
          "name": "[MySQL] - Future Minds"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obter o template do banco de dados\nlet template = $node[\"pesquisa_json_fields_deal\"].json[\"payload_fields\"];\n\n// Verifique se o template é uma string JSON ou já um objeto\nif (typeof template === \"string\") {\n  template = JSON.parse(template); // Converte a string JSON em um objeto\n}\n\n// Obter os dados diretamente do \"body\" do webhook\nconst payload = $node[\"fluxo_chamado\"].json[\"body\"][\"payload\"]; // Acessa o body diretamente\n\n// Função para substituir os placeholders no template\nconst replacePlaceholders = (template, data) => {\n  const stringified = JSON.stringify(template); // Converte o template para string\n  const replaced = stringified.replace(/{{\\s*(\\w+)\\s*}}/g, (_, key) => {\n    if (data[key] !== undefined) {\n      return data[key]; // Substitui pelo valor correspondente\n    } else {\n      console.warn(`Placeholder {{ ${key} }} não encontrado no payload.`); // Aviso se o placeholder não for encontrado\n      return ''; // Retorna vazio se o valor não existir\n    }\n  });\n  return JSON.parse(replaced); // Converte de volta para JSON\n};\n\n// Substituir os placeholders no template com os dados do webhook\nconst result = replacePlaceholders(template, payload);\n\n// Retornar o resultado para o próximo node\nreturn {\n  custom_fields_values: result\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        400
      ],
      "id": "5a825286-eec4-4c2a-af58-f8359d810fee",
      "name": "formata_campos_deal"
    },
    {
      "parameters": {
        "jsCode": "// Obter o template do banco de dados\nlet template = $node[\"pesquisa_json_fields_deal2\"].json[\"payload_fields\"];\n\n// Verifique se o template é uma string JSON ou já um objeto\nif (typeof template === \"string\") {\n  try {\n    template = JSON.parse(template); // Converte a string JSON em um objeto\n  } catch (error) {\n    throw new Error(\"Erro ao converter template para JSON: \" + error.message);\n  }\n}\n\n// Obter os dados diretamente do \"body\" do webhook\nconst payload = $node[\"fluxo_chamado\"].json[\"body\"][\"payload\"]; // Acessa o body diretamente\n\n// Função para sanitizar valores e substituir os placeholders no template\nconst replacePlaceholders = (template, data) => {\n  const stringified = JSON.stringify(template); // Converte o template para string\n  \n  const replaced = stringified.replace(/{{\\s*(\\w+)\\s*}}/g, (_, key) => {\n    if (data[key] !== undefined) {\n      // Sanitiza valores: remove caracteres problemáticos e escapa aspas\n      return String(data[key])\n        .replace(/[\\r\\n\\t]/g, \" \") // Remove quebras de linha e tabulações\n        .replace(/\"/g, '\\\\\"'); // Escapa aspas duplas\n    } else {\n      console.warn(`Placeholder {{ ${key} }} não encontrado no payload.`);\n      return ''; // Retorna vazio se o valor não existir\n    }\n  });\n\n  try {\n    return JSON.parse(replaced); // Converte de volta para JSON\n  } catch (error) {\n    throw new Error(\"Erro ao converter replaced para JSON: \" + error.message);\n  }\n};\n\n// Substituir os placeholders no template com os dados do webhook\nconst result = replacePlaceholders(template, payload);\n\n// Retornar o resultado para o próximo node\nreturn {\n  custom_fields_values: result\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        580
      ],
      "id": "fe1b4491-b6d5-466f-be63-c34f1adea172",
      "name": "formata_campos_deal2"
    },
    {
      "parameters": {
        "jsCode": "// Obter o template do banco de dados\nlet template = $node[\"pesquisa_json_fields_deal3\"].json[\"payload_fields\"];\n\n// Verifique se o template é uma string JSON ou já um objeto\nif (typeof template === \"string\") {\n  template = JSON.parse(template); // Converte a string JSON em um objeto\n}\n\n// Obter os dados diretamente do \"body\" do webhook\nconst payload = $node[\"fluxo_chamado\"].json[\"body\"][\"payload\"]; // Acessa o body diretamente\n\n// Função para substituir os placeholders no template\nconst replacePlaceholders = (template, data) => {\n  const stringified = JSON.stringify(template); // Converte o template para string\n  const replaced = stringified.replace(/{{\\s*(\\w+)\\s*}}/g, (_, key) => {\n    if (data[key] !== undefined) {\n      return data[key]; // Substitui pelo valor correspondente\n    } else {\n      console.warn(`Placeholder {{ ${key} }} não encontrado no payload.`); // Aviso se o placeholder não for encontrado\n      return ''; // Retorna vazio se o valor não existir\n    }\n  });\n  return JSON.parse(replaced); // Converte de volta para JSON\n};\n\n// Substituir os placeholders no template com os dados do webhook\nconst result = replacePlaceholders(template, payload);\n\n// Retornar o resultado para o próximo node\nreturn {\n  custom_fields_values: result\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        120
      ],
      "id": "e0d8b079-d7d7-46a1-a804-6325ed9ab827",
      "name": "formata_campos_deal3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "626e3f5f-0f35-4b9e-84e1-f493d495f742",
              "leftValue": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"payload\"][\"tipo_forms\"] }}",
              "rightValue": "Agendamento",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b2538a2f-0d50-4874-bf56-d39e524f683e",
      "name": "agendamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -60,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "626e3f5f-0f35-4b9e-84e1-f493d495f742",
              "leftValue": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"qualificacao\"] }}",
              "rightValue": "Agendamento",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b0441625-318c-4d14-8ff8-83a3b5906da4",
      "name": "qualificacao_preenchida",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        140,
        480
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "fields_email_marketing_etapas_funil",
          "mode": "list",
          "cachedResultName": "fields_email_marketing_etapas_funil"
        },
        "where": {
          "values": [
            {
              "column": "id_etapa_funil",
              "value": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"id_etapa_funil\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9fca397f-2feb-4623-8549-cb35147f0551",
      "name": "pesquisa_json_fields_deal",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        400,
        400
      ],
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "JtvnOichfjUUmLAo",
          "name": "[MySQL] - Future Minds"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "fields_bot_conversa_etapas_funil",
          "mode": "list",
          "cachedResultName": "fields_bot_conversa_etapas_funil"
        },
        "where": {
          "values": [
            {
              "column": "id_etapa_funil",
              "value": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"id_etapa_funil\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9a385382-e5bd-4372-a63a-ef6d8a6eaf99",
      "name": "pesquisa_json_fields_deal2",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        400,
        580
      ],
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "JtvnOichfjUUmLAo",
          "name": "[MySQL] - Future Minds"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "fields_bot_conversa_etapas_funil",
          "mode": "list",
          "cachedResultName": "fields_bot_conversa_etapas_funil"
        },
        "where": {
          "values": [
            {
              "column": "id_situacao_agendamento",
              "value": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"id_situacao_agendamento\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cc648fa7-6108-4504-8d54-f0dc50d3b7ef",
      "name": "pesquisa_json_fields_deal3",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        380,
        120
      ],
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "JtvnOichfjUUmLAo",
          "name": "[MySQL] - Future Minds"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "626e3f5f-0f35-4b9e-84e1-f493d495f742",
              "leftValue": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"payload\"][\"tipo_forms\"] }}",
              "rightValue": "Checkout",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "17fd7b14-3e81-4137-b53c-e355f3bb4e0b",
      "name": "checkout",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -260,
        100
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "fields_email_marketing_etapas_funil",
          "mode": "list",
          "cachedResultName": "fields_email_marketing_etapas_funil"
        },
        "where": {
          "values": [
            {
              "column": "id_situacao_checkout",
              "value": "={{ $node[\"fluxo_chamado\"].json[\"body\"][\"id_situacao_checkout\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "13338278-f50a-4ea7-93d8-56b7848d7709",
      "name": "pesquisa_json_fields_deal1",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        380,
        -80
      ],
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "JtvnOichfjUUmLAo",
          "name": "[MySQL] - Future Minds"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obter o template do banco de dados\nlet template = $node[\"pesquisa_json_fields_deal1\"].json[\"payload_fields\"];\n\n// Verifique se o template é uma string JSON ou já um objeto\nif (typeof template === \"string\") {\n  template = JSON.parse(template); // Converte a string JSON em um objeto\n}\n\n// Obter os dados diretamente do \"body\" do webhook\nconst payload = $node[\"fluxo_chamado\"].json[\"body\"][\"payload\"]; // Acessa o body diretamente\n\n// Função para substituir os placeholders no template\nconst replacePlaceholders = (template, data) => {\n  const stringified = JSON.stringify(template); // Converte o template para string\n  const replaced = stringified.replace(/{{\\s*(\\w+)\\s*}}/g, (_, key) => {\n    if (data[key] !== undefined) {\n      return data[key]; // Substitui pelo valor correspondente\n    } else {\n      console.warn(`Placeholder {{ ${key} }} não encontrado no payload.`); // Aviso se o placeholder não for encontrado\n      return ''; // Retorna vazio se o valor não existir\n    }\n  });\n  return JSON.parse(replaced); // Converte de volta para JSON\n};\n\n// Substituir os placeholders no template com os dados do webhook\nconst result = replacePlaceholders(template, payload);\n\n// Retornar o resultado para o próximo node\nreturn {\n  custom_fields_values: result\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        -80
      ],
      "id": "9eda1253-ccce-45f9-829c-5d211680ffe4",
      "name": "formata_campos_deal1"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $node[\"pesquisa_json_fields_deal\"].runIndex >= 0      ?   $node[\"pesquisa_json_fields_deal\"].json[\"webhook\"]  : $node[\"pesquisa_json_fields_deal2\"].runIndex >= 0      ?   $node[\"pesquisa_json_fields_deal2\"].json[\"webhook\"] : $node[\"pesquisa_json_fields_deal3\"].runIndex >= 0      ?   $node[\"pesquisa_json_fields_deal3\"].json[\"webhook\"] : $node[\"pesquisa_json_fields_deal1\"].runIndex >= 0      ?   $node[\"pesquisa_json_fields_deal1\"].json[\"webhook\"] : null }}",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{ $node[\"formata_campos_deal\"].runIndex >= 0 \n    ? JSON.stringify($node[\"formata_campos_deal\"].json[\"custom_fields_values\"]) \n    : $node[\"formata_campos_deal1\"].runIndex >= 0 \n      ? JSON.stringify($node[\"formata_campos_deal1\"].json[\"custom_fields_values\"]) \n      : $node[\"formata_campos_deal2\"].runIndex >= 0 \n    ? JSON.stringify($node[\"formata_campos_deal2\"].json[\"custom_fields_values\"]) : $node[\"formata_campos_deal3\"].runIndex >= 0 \n    ? JSON.stringify($node[\"formata_campos_deal3\"].json[\"custom_fields_values\"]) : null }}"
      },
      "name": "preenche_campos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1060,
        -80
      ],
      "id": "83f5fa40-f084-4ad8-9f3e-3629b30064bb",
      "continueOnFail": true
    }
  ],
  "pinData": {
    "fluxo_chamado": [
      {
        "json": {
          "headers": {
            "host": "n8nwebhookhetznerfutureminds.automagicbots.com.br",
            "user-agent": "axios/1.8.2",
            "content-length": "946",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "n8nwebhookhetznerfutureminds.automagicbots.com.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "8fff2fff9f21",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "telefone": "553185711260",
            "nome": "Gabriel",
            "sobrenome": "",
            "id_user": 3397,
            "id_etapa_funil": 2,
            "payload": {
              "nome": "Gabriel",
              "sobrenome": "",
              "email": "teste@automagicbots.com.br",
              "telefone": "553185711260",
              "utm_source": "facebook",
              "utm_campaign": "quente",
              "utm_term": "ig30d",
              "utm_medium": "stories",
              "utm_content": "ad01",
              "id_funil": "12",
              "instagram": "",
              "id_agendamento": "74bce4a1-8346-421f-a0a5-4633f6ab2487",
              "id_forms": "2",
              "tipo_forms": "Agendamento",
              "link_call": "https://calendly.com/events/74bce4a1-8346-421f-a0a5-4633f6ab2487/google_meet",
              "email_responsavel": "lilian.cidreira@futureminds.com.br",
              "data_termino": "2025-04-04 11:15:00",
              "data_inicio": "2025-04-04 10:30:00",
              "data_agendamento": "2025-04-01 15:26:32",
              "evento": "Agendamento",
              "dia_semana": "Sexta-feira",
              "id_agendamento_reagendado": "",
              "nome_do_evento": "Sessão Sprint de Carreira",
              "motivo_cancelamento": "",
              "data_call_kommo": "04/04/2025 10:30",
              "closer": "Lilian Cidreira"
            },
            "id_situacao_agendamento": 1
          },
          "webhookUrl": "https://n8nwebhookhetznerfutureminds.automagicbots.com.br/webhook/d371999c-ae80-4ee4-a52a-4cef17d7a87a",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "zRPVyGjtTGhPaWFr"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-04-02T19:46:40.542Z",
  "versionId": "b2543708-3a1d-4c02-b6bd-bd80337fb29f"
}